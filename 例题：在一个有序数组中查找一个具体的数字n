//在一个有序数组中查找一个具体的数字n

//                 不使用二分查找
#include<stdio.h>
int main()
{
	int n = 7;  //假设要查找的数字是7
	int i = 0;
	int arr[] = {1,2,3,4,5,6,7,8,9,10};
	int sz = sizeof(arr)/sizeof(arr[0]);  // 数组中的元素个数
	for(i=0;i<=9;i++)
	{
		if(n == arr[i])
		{
			printf("找到了，该元素的下标是：%d\n",i);
		    break;
		}
	}
	if(sz==i)
		printf("找不到该元素\n");
	return 0;
}
//-----------------------------------
//               使用二分查找
int main()
{
	int n = 7;  //设要查找的数为7
	int arr[] = {1,2,3,4,5,6,7,8,9,10};
	int sz = sizeof(arr)/sizeof(arr[0]);
	int left = 0;  //左下标
	int right = sz-1;  //右下标
	while(left<=right)
	{
		int mid = (left+right)/2;
		if(arr[mid]>n)
		{
			right = mid-1;
		}
		else if(arr[mid]<n)
		{
			left = mid+1;
		}
		else
		{
			printf("找到了，下标是:%d\n",mid);
			break;
		}
	if(left>right)
		printf("找不到\n");
	}
	return 0;
}
